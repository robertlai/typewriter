// Generated by CoffeeScript 1.9.3
var stocksApp;

stocksApp = angular.module('drawingApp', []);

stocksApp.controller('drawingController', function($scope, $window) {
  var BADNESS, CHARHEIGHT, CHARWIDTH, SPACEWIDTH, canvas, ctx, draw, drawLetter, heightCount, resetCanvas, widthCount;
  $scope.text = '';
  widthCount = 0;
  heightCount = 0;
  CHARWIDTH = 30;
  CHARHEIGHT = 50;
  SPACEWIDTH = 10;
  BADNESS = 10;
  canvas = document.getElementById('canvas');
  ctx = canvas.getContext('2d');
  $scope.update = function() {
    var j, len, letter, ref, results;
    resetCanvas();
    ref = $scope.text;
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      letter = ref[j];
      results.push(draw(letter));
    }
    return results;
  };
  resetCanvas = function() {
    widthCount = heightCount = 0;
    return ctx.clearRect(0, 0, 1000, 800);
  };
  draw = function(letter) {
    var points;
    points = [];
    if (letter === 'a') {
      points = [[20, 30], [10, 30], [10, 45], [20, 45], [20, 30], [20, 57]];
    }
    drawLetter(points);
    widthCount++;
    if (widthCount === 25) {
      widthCount = 0;
      return heightCount++;
    }
  };
  drawLetter = function(points) {
    var i, j, ref, xShift, yShift;
    ctx.beginPath();
    for (i = j = 0, ref = points.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {
      xShift = (Math.random() - 0.5) * BADNESS;
      yShift = (Math.random() - 0.5) * BADNESS;
      points[i][0] += xShift + (widthCount * (CHARWIDTH + SPACEWIDTH));
      points[i][1] += yShift + (heightCount * (CHARHEIGHT + SPACEWIDTH));
      if (i === 0) {
        ctx.moveTo(points[i][0], points[i][1]);
      } else {
        ctx.lineTo(points[i][0], points[i][1]);
      }
    }
    return ctx.stroke();
  };
  return $scope.$watch('window.innerWidth', function() {
    return canvas.width = window.innerWidth - 150;
  });
});
